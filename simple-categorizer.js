// Simple categorizer that works without WebLLM
class SimpleCategorizer {
  constructor() {
    // Hardcoded categories for reliable categorization
    this.categories = {
      dairy: { 
        name: "Mejeri", 
        emoji: "ðŸ¥›", 
        items: ["mjÃ¶lk", "mellanmjÃ¶lk", "lÃ¤ttmjÃ¶lk", "standardmjÃ¶lk", "ost", "yoghurt", "smÃ¶r", "grÃ¤dde", "fil", "kvarg", "kefir", "crÃ¨me fraiche", "smetana", "cottage cheese"],
        keywords: ["mjÃ¶lk", "ost", "yoghurt", "grÃ¤dde", "smÃ¶r", "fil"]
      },
      meat_fish: { 
        name: "KÃ¶tt & Fisk", 
        emoji: "ðŸ¥©", 
        items: ["kÃ¶tt", "fisk", "kyckling", "lax", "korv", "bacon", "skinka", "flÃ¤sk", "nÃ¶t", "kÃ¶ttfÃ¤rs", "kÃ¶ttbullar", "hamburgare", "biff", "kotlett", "flÃ¤skfilÃ©", "kycklingfilÃ©", "torsk", "sej"],
        keywords: ["kÃ¶tt", "fisk", "kyckling", "korv", "bacon", "flÃ¤sk", "nÃ¶t"]
      },
      fruits_vegetables: { 
        name: "Frukt & GrÃ¶nsaker", 
        emoji: "ðŸ¥¬", 
        items: ["Ã¤pple", "banan", "tomat", "gurka", "sallad", "paprika", "lÃ¶k", "potatis", "morot", "apelsin", "pÃ¤ron", "druvor", "jordgubbar", "blÃ¥bÃ¤r", "hallon", "citron", "lime", "avokado", "broccoli", "blomkÃ¥l"],
        keywords: ["frukt", "grÃ¶nsak", "sallad", "tomat", "bÃ¤r"]
      },
      pantry: { 
        name: "Skafferi", 
        emoji: "ðŸ¥«", 
        items: ["mjÃ¶l", "socker", "pasta", "ris", "salt", "peppar", "olja", "vinÃ¤ger", "konserver", "sylt", "honung", "kryddor", "buljong", "sÃ¥s", "ketchup", "senap"],
        keywords: ["mjÃ¶l", "socker", "krydd", "sÃ¥s", "pasta", "ris"]
      },
      bread_bakery: {
        name: "BrÃ¶d & Bakverk",
        emoji: "ðŸ¥–",
        items: ["brÃ¶d", "limpa", "fralla", "baguette", "knÃ¤ckebrÃ¶d", "kex", "kakor", "bulle", "croissant", "toast", "pitabrÃ¶d", "tunnbrÃ¶d"],
        keywords: ["brÃ¶d", "bulle", "kaka", "kex"]
      },
      frozen: { 
        name: "Frysvaror", 
        emoji: "ðŸ§Š", 
        items: ["glass", "fryst", "frysta", "frys", "fryspizza", "frysgrÃ¶nsaker", "fryst fisk", "glasspinnar"],
        keywords: ["fryst", "frys", "glass"]
      },
      beverages: {
        name: "Drycker",
        emoji: "ðŸ¥¤",
        items: ["juice", "lÃ¤sk", "vatten", "Ã¶l", "vin", "kaffe", "te", "saft", "cola", "sprite", "fanta", "mineralvatten"],
        keywords: ["dryck", "juice", "lÃ¤sk", "saft", "Ã¶l", "vin"]
      },
      household: { 
        name: "HushÃ¥ll", 
        emoji: "ðŸ§¹", 
        items: ["tvÃ¤ttmedel", "papper", "pÃ¥se", "diskmedel", "toalettpapper", "hushÃ¥llspapper", "soppÃ¥sar", "fryspÃ¥sar", "plastfolie", "aluminiumfolie"],
        keywords: ["tvÃ¤tt", "disk", "stÃ¤d", "papper", "pÃ¥se"]
      }
    };
  }

  categorize(item) {
    if (!item || typeof item !== 'string') {
      return { category: 'pantry', confidence: 0, method: 'default' };
    }

    const normalized = item.toLowerCase().trim();
    
    // Check exact matches
    for (const [categoryKey, category] of Object.entries(this.categories)) {
      if (category.items.some(i => i.toLowerCase() === normalized)) {
        return {
          category: categoryKey,
          confidence: 1.0,
          method: 'exact'
        };
      }
    }
    
    // Check if item contains category keywords
    for (const [categoryKey, category] of Object.entries(this.categories)) {
      for (const keyword of category.keywords) {
        if (normalized.includes(keyword)) {
          return {
            category: categoryKey,
            confidence: 0.8,
            method: 'keyword'
          };
        }
      }
    }
    
    // Check partial matches
    for (const [categoryKey, category] of Object.entries(this.categories)) {
      for (const categoryItem of category.items) {
        if (normalized.includes(categoryItem.toLowerCase()) || 
            categoryItem.toLowerCase().includes(normalized)) {
          return {
            category: categoryKey,
            confidence: 0.6,
            method: 'partial'
          };
        }
      }
    }
    
    // Default to pantry
    return { category: 'pantry', confidence: 0.1, method: 'default' };
  }

  getCategoryInfo(categoryKey) {
    return this.categories[categoryKey] || {
      name: 'Ã–vrigt',
      emoji: 'ðŸ“¦'
    };
  }

  getAllCategories() {
    return Object.entries(this.categories).map(([key, cat]) => ({
      key,
      name: cat.name,
      emoji: cat.emoji
    }));
  }
}

// Export for use
window.SimpleCategorizer = SimpleCategorizer;