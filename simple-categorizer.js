// Simple categorizer that works without WebLLM
class SimpleCategorizer {
  constructor() {
    // Common misspellings and variations
    this.spellCorrections = {
      // Mejeri
      "mjÃ¶k": "mjÃ¶lk",
      "mjolk": "mjÃ¶lk",
      "mjÃ¶lken": "mjÃ¶lk",
      "mlÃ¶k": "mjÃ¶lk",
      "jogurt": "yoghurt",
      "yogurt": "yoghurt",
      "youghurt": "yoghurt",
      "gradde": "grÃ¤dde",
      "grÃ¤de": "grÃ¤dde",
      "smÃ¶rr": "smÃ¶r",
      "smorr": "smÃ¶r",
      "ossst": "ost",
      
      // KÃ¶tt & Fisk
      "kycling": "kyckling",
      "kykling": "kyckling",
      "kÃ¶tfÃ¤rs": "kÃ¶ttfÃ¤rs",
      "kotfars": "kÃ¶ttfÃ¤rs",
      "flÃ¤skkÃ¶tt": "flÃ¤sk",
      "flaskkott": "flÃ¤sk",
      "laxfile": "laxfilÃ©",
      "korvv": "korv",
      "baacon": "bacon",
      "bacoon": "bacon",
      
      // Frukt & GrÃ¶nsaker
      "Ã¤ple": "Ã¤pple",
      "apple": "Ã¤pple",
      "aplen": "Ã¤pple",
      "bannan": "banan",
      "bananer": "banan",
      "tomater": "tomat",
      "tomatr": "tomat",
      "gurkor": "gurka",
      "salad": "sallad",
      "sallat": "sallad",
      "paprikka": "paprika",
      "paprica": "paprika",
      "lÃ¶kk": "lÃ¶k",
      "morotter": "morot",
      "morÃ¶tter": "morot",
      "potatiss": "potatis",
      "potatisar": "potatis",
      
      // Skafferi
      "mjoll": "mjÃ¶l",
      "mjol": "mjÃ¶l",
      "sockeer": "socker",
      "sockr": "socker",
      "paasta": "pasta",
      "spagetti": "spaghetti",
      "spageti": "spaghetti",
      "riis": "ris",
      "sallt": "salt",
      "pepppar": "peppar",
      "pepar": "peppar",
      "ollja": "olja",
      "olivolja": "olja",
      
      // BrÃ¶d
      "brÃ¶dd": "brÃ¶d",
      "brod": "brÃ¶d",
      "knÃ¤ckebrÃ¶dd": "knÃ¤ckebrÃ¶d",
      "knÃ¤cke": "knÃ¤ckebrÃ¶d",
      "bulllar": "bulle",
      "bullar": "bulle",
      "kaakor": "kakor",
      "kaaka": "kaka",
      
      // Drycker
      "juise": "juice",
      "juce": "juice",
      "lÃ¤skk": "lÃ¤sk",
      "lask": "lÃ¤sk",
      "kaffe": "kaffe",
      "kafe": "kaffe",
      "thee": "te",
      "Ã¶ll": "Ã¶l",
      
      // HushÃ¥ll
      "tvÃ¤tmedel": "tvÃ¤ttmedel",
      "tvatmedel": "tvÃ¤ttmedel",
      "diskmedell": "diskmedel",
      "toalettpapper": "toalettpapper",
      "toapapper": "toalettpapper",
      "hushÃ¥llspapper": "hushÃ¥llspapper",
      "hushÃ¥lspapper": "hushÃ¥llspapper",
      
      // Pluralformer som singularis
      "Ã¤pplen": "Ã¤pple",
      "pÃ¤ron": "pÃ¤ron",
      "morÃ¶tter": "morot",
      "potatisar": "potatis",
      "tomater": "tomat",
      "gurkor": "gurka",
      "limpor": "limpa",
      "ostar": "ost",
      "mjÃ¶lkar": "mjÃ¶lk",
      "brÃ¶der": "brÃ¶d",
      
      // Engelska till svenska
      "milk": "mjÃ¶lk",
      "bread": "brÃ¶d",
      "cheese": "ost",
      "butter": "smÃ¶r",
      "eggs": "Ã¤gg",
      "chicken": "kyckling",
      "beef": "nÃ¶tkÃ¶tt",
      "pork": "flÃ¤sk",
      "fish": "fisk",
      "salmon": "lax",
      "apple": "Ã¤pple",
      "banana": "banan",
      "orange": "apelsin",
      "tomato": "tomat",
      "potato": "potatis",
      "onion": "lÃ¶k",
      "carrot": "morot",
      "sugar": "socker",
      "flour": "mjÃ¶l",
      "rice": "ris",
      "pasta": "pasta",
      "coffee": "kaffe",
      "tea": "te",
      "juice": "juice",
      "water": "vatten",
      
      // Mer vanliga felstavningar
      "Ã¤ggg": "Ã¤gg",
      "agg": "Ã¤gg",
      "melk": "mjÃ¶lk",
      "mÃ¶lk": "mjÃ¶lk",
      "brÃ¸d": "brÃ¶d",
      "fisk": "fisk",
      "kylling": "kyckling",
      "lÃ¸k": "lÃ¶k",
      "luk": "lÃ¶k",
      "gulrot": "morot",
      "eple": "Ã¤pple",
      "appelsin": "apelsin",
      "sukker": "socker"
    };
    
    // Hardcoded categories for reliable categorization
    this.categories = {
      dairy: { 
        name: "Mejeri", 
        emoji: "ðŸ¥›", 
        items: ["mjÃ¶lk", "mellanmjÃ¶lk", "lÃ¤ttmjÃ¶lk", "standardmjÃ¶lk", "ost", "yoghurt", "smÃ¶r", "grÃ¤dde", "fil", "kvarg", "kefir", "crÃ¨me fraiche", "smetana", "cottage cheese", "Ã¤gg"],
        keywords: ["mjÃ¶lk", "ost", "yoghurt", "grÃ¤dde", "smÃ¶r", "fil", "Ã¤gg"]
      },
      meat_fish: { 
        name: "KÃ¶tt & Fisk", 
        emoji: "ðŸ¥©", 
        items: ["kÃ¶tt", "fisk", "kyckling", "lax", "korv", "bacon", "skinka", "flÃ¤sk", "nÃ¶t", "kÃ¶ttfÃ¤rs", "kÃ¶ttbullar", "hamburgare", "biff", "kotlett", "flÃ¤skfilÃ©", "kycklingfilÃ©", "torsk", "sej"],
        keywords: ["kÃ¶tt", "fisk", "kyckling", "korv", "bacon", "flÃ¤sk", "nÃ¶t"]
      },
      fruits_vegetables: { 
        name: "Frukt & GrÃ¶nsaker", 
        emoji: "ðŸ¥¬", 
        items: ["Ã¤pple", "banan", "tomat", "gurka", "sallad", "paprika", "lÃ¶k", "potatis", "morot", "apelsin", "pÃ¤ron", "druvor", "jordgubbar", "blÃ¥bÃ¤r", "hallon", "citron", "lime", "avokado", "broccoli", "blomkÃ¥l"],
        keywords: ["frukt", "grÃ¶nsak", "sallad", "tomat", "bÃ¤r"]
      },
      pantry: { 
        name: "Skafferi", 
        emoji: "ðŸ¥«", 
        items: ["mjÃ¶l", "socker", "pasta", "ris", "salt", "peppar", "olja", "vinÃ¤ger", "konserver", "sylt", "honung", "kryddor", "buljong", "sÃ¥s", "ketchup", "senap"],
        keywords: ["mjÃ¶l", "socker", "krydd", "sÃ¥s", "pasta", "ris"]
      },
      bread_bakery: {
        name: "BrÃ¶d & Bakverk",
        emoji: "ðŸ¥–",
        items: ["brÃ¶d", "limpa", "fralla", "baguette", "knÃ¤ckebrÃ¶d", "kex", "kakor", "bulle", "croissant", "toast", "pitabrÃ¶d", "tunnbrÃ¶d"],
        keywords: ["brÃ¶d", "bulle", "kaka", "kex"]
      },
      frozen: { 
        name: "Frysvaror", 
        emoji: "ðŸ§Š", 
        items: ["glass", "fryst", "frysta", "frys", "fryspizza", "frysgrÃ¶nsaker", "fryst fisk", "glasspinnar"],
        keywords: ["fryst", "frys", "glass"]
      },
      beverages: {
        name: "Drycker",
        emoji: "ðŸ¥¤",
        items: ["juice", "lÃ¤sk", "vatten", "Ã¶l", "vin", "kaffe", "te", "saft", "cola", "sprite", "fanta", "mineralvatten"],
        keywords: ["dryck", "juice", "lÃ¤sk", "saft", "Ã¶l", "vin"]
      },
      household: { 
        name: "HushÃ¥ll", 
        emoji: "ðŸ§¹", 
        items: ["tvÃ¤ttmedel", "papper", "pÃ¥se", "diskmedel", "toalettpapper", "hushÃ¥llspapper", "soppÃ¥sar", "fryspÃ¥sar", "plastfolie", "aluminiumfolie"],
        keywords: ["tvÃ¤tt", "disk", "stÃ¤d", "papper", "pÃ¥se"]
      }
    };
  }

  // Spell correction method
  correctSpelling(word) {
    const normalized = word.toLowerCase().trim();
    
    // Check if it needs correction
    if (this.spellCorrections[normalized]) {
      return {
        corrected: this.spellCorrections[normalized],
        original: word,
        wasCorrect: false
      };
    }
    
    // Check for common typos with Levenshtein distance for simple cases
    // For now, just return as-is if no exact match in corrections
    return {
      corrected: word,
      original: word,
      wasCorrect: true
    };
  }

  categorize(item) {
    if (!item || typeof item !== 'string') {
      return { category: 'pantry', confidence: 0, method: 'default' };
    }

    // First, try to correct spelling
    const spellCheck = this.correctSpelling(item);
    const normalized = spellCheck.corrected.toLowerCase().trim();
    
    if (!spellCheck.wasCorrect) {
      console.log(`RÃ¤ttstavning: "${item}" â†’ "${spellCheck.corrected}"`);
    }
    
    // Check exact matches
    for (const [categoryKey, category] of Object.entries(this.categories)) {
      if (category.items.some(i => i.toLowerCase() === normalized)) {
        return {
          category: categoryKey,
          confidence: 1.0,
          method: 'exact',
          correctedText: spellCheck.wasCorrect ? null : spellCheck.corrected
        };
      }
    }
    
    // Check if item contains category keywords
    for (const [categoryKey, category] of Object.entries(this.categories)) {
      for (const keyword of category.keywords) {
        if (normalized.includes(keyword)) {
          return {
            category: categoryKey,
            confidence: 0.8,
            method: 'keyword',
            correctedText: spellCheck.wasCorrect ? null : spellCheck.corrected
          };
        }
      }
    }
    
    // Check partial matches
    for (const [categoryKey, category] of Object.entries(this.categories)) {
      for (const categoryItem of category.items) {
        if (normalized.includes(categoryItem.toLowerCase()) || 
            categoryItem.toLowerCase().includes(normalized)) {
          return {
            category: categoryKey,
            confidence: 0.6,
            method: 'partial',
            correctedText: spellCheck.wasCorrect ? null : spellCheck.corrected
          };
        }
      }
    }
    
    // Default to pantry
    return { 
      category: 'pantry', 
      confidence: 0.1, 
      method: 'default',
      correctedText: spellCheck.wasCorrect ? null : spellCheck.corrected
    };
  }

  getCategoryInfo(categoryKey) {
    return this.categories[categoryKey] || {
      name: 'Ã–vrigt',
      emoji: 'ðŸ“¦'
    };
  }

  getAllCategories() {
    return Object.entries(this.categories).map(([key, cat]) => ({
      key,
      name: cat.name,
      emoji: cat.emoji
    }));
  }
}

// Export for use
window.SimpleCategorizer = SimpleCategorizer;